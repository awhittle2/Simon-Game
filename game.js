// This game 

var colors = ["red", "blue", "green", "yellow"]; // Array to store the different button colors

var game = []; // Array to store the correct color order as generated by the next function
var user = []; // Array to store the pattern of the user, which will then be comparted to the game pattern

var inGame = false; // Bool to verify whether or not the game has started
var level = 0; // Int to store the user level

$(document).keypress(function() // If a key is pressed
{
  if (!inGame) { // If the game has not started
    $("#level-title").text("Level " + level); // Set the level
    next(); // Call the function to start randomly generating a game pattern
    inGame = true; // Set inGame to true
  }
});

$(".btn").click(function() // If a button is clicked
{
  var userColor = $(this).attr("id"); // Get the button clicked id and set it to userColor
  user.push(userColor); // Add the clicked color to the user array

  playSound(userColor); // Play the sound of the correct color of the button clicked
  animatePress(userColor); // Add a pressed animation to the button clicked

  check(user.length-1); // See if the pressed button matches the game pattern
});

function check(currentLevel) // Function to make sure that the user array and the game array match before moving on or ending it
{
    if (game[currentLevel] === user[currentLevel]) { // If the arrays are equivalent
      if (user.length === game.length) { // If they have the same number of entries
        setTimeout(function () {
          next(); // Call the next function
        }, 1000); // After 1 second (next function is delayed a bit)
      }
    } else { // If the two arrays are not the same
      playSound("wrong"); // Play the wrong sound
      $("body").addClass("game-over"); // Add the game over style from the style sheet
      $("#level-title").text("Game Over, Press Any Key to Restart"); // Change the title to game over

      setTimeout(function () {
        $("body").removeClass("game-over"); // Remove the game-over class
      }, 200); // After 200ms

      gameOver(); // Call the game over function
    }
}


function next() // Function to start the next level and choose a random color
{ 
  user = []; // Reset the user color array
  level++; // Increase the level
  $("#level-title").text("Level " + level); // Update the level text

  var random = Math.floor(Math.random() * 4); // Pick a random number 0 - 3 (4)
  var randomColor = colors[random]; // Create a varriable to hold the color associated with the random number
  game.push(randomColor); // Push the new color to the game array

  $("#" + randomColor).fadeIn(100).fadeOut(100).fadeIn(100); // Highlight the random color picked
  playSound(randomColor); // Play the sound of the random color picked
}

function animatePress(currentColor) // Function to make a button look preseed
{
  $("#" + currentColor).addClass("pressed"); // Adds the pressed class from the style sheet
  setTimeout(function () { // Waits 100ms before making a next move
    $("#" + currentColor).removeClass("pressed"); // Removes the pressed class from the style sheet
  }, 100);
}

function playSound(name) // Function to play the sound associated with the color picked
{
  var audio = new Audio("sounds/" + name + ".mp3"); // Creates a variable to hold the sound
  audio.play(); // Plays the sound
}

function gameOver() // Function to reset the game once it is lost
{
  level = 0; // Set level to 0
  game = []; // Clear the game color pattern array
  inGame = false; //Set inGame bool to false
}
